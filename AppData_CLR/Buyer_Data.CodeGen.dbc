;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author: Richard C. Morris, RCP Consultants.
;;
;; Template Name:   Symphony Framework : SYMPHONY_DATA_CLR_V3_2.tpl
;;
;;***************************************************************************
import System
import System.Collections.Generic
import System.Text

import Symphony.Conductor.Model
import Symphony.Conductor.Converters

namespace AppData

    ;;define a structure that we can use around the applicaiton

	structure STRBuyer
		.include 'buyer' repository  , norecord
	endstructure

    public partial class Buyer_Data extends Symphony.Conductor.Model.DataObjectBase

		public const RPSStructureName	,String	,"BUYER"
		public const RPSStructureSize	,Int32	,768

		private buyer_main	,STRBuyer
		private buyer_store	,STRBuyer

		private mDoneSynergyRecordValue	,boolean

		;;use symphony converters
		private mDateConveter		,@SynergyDecimalDateConverter	,new SynergyDecimalDateConverter()
		private mAlphaConveter		,@SynergyAlphaConverter	,new SynergyAlphaConverter()
		private mAlphaTFConverter	,@SynergyAlphaYNConverter	,new SynergyAlphaYNConverter()
		private mDecimalConverter	,@SynergyDecimalConverter	,new SynergyDecimalConverter()
		private mImpliedDecimalConveter	,@SynergyImpliedDecimalConverter	,new SynergyImpliedDecimalConverter()
		private mIntegerConveter	,@SynergyIntConverter	,new SynergyIntConverter()
		private mDecimalTFConverter	,@SynergyDecimalTFConverter	,new SynergyDecimalTFConverter()

		static method Buyer_Data
			endparams
		proc
			mStaticFieldList = new List<BaseFieldInformation>()
			mStaticFieldDictionary = new Dictionary<string, int>()
			mStaticFieldNameList = new List<String>()
			mStaticFieldHeadingList = new List<String>()

			
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "BUYER_KEY", "Buyer_key",  "", "",
			&	"", "BUYER_KEY", 1, 32,
			&	0, 0, 0, 0,
			&	"ALPHA", true, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "CREATED_TIMESTAMP", "Created_timestamp",  "", "",
			&	"", "CREATED_TIMESTAMP", 33, 8,
			&	0, 0, 0, 0,
			&	"AUTO TIMESTAMP", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "MODIFIED_TIMESTAMP", "Modified_timestamp",  "", "",
			&	"", "MODIFIED_TIMESTAMP", 41, 8,
			&	0, 0, 0, 0,
			&	"AUTO TIMESTAMP", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "NAME", "Name",  "", "",
			&	"", "NAME", 49, 30,
			&	0, 0, 0, 0,
			&	"ALPHA", true, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "ADDRESS1", "Address1",  "", "",
			&	"", "ADDRESS1", 79, 30,
			&	0, 0, 0, 0,
			&	"ALPHA", true, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "ADDRESS2", "Address2",  "", "",
			&	"", "ADDRESS2", 109, 30,
			&	0, 0, 0, 0,
			&	"ALPHA", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "ADDRESS3", "Address3",  "", "",
			&	"", "ADDRESS3", 139, 30,
			&	0, 0, 0, 0,
			&	"ALPHA", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "POSTCODE", "Postcode",  "", "",
			&	"", "POSTCODE", 169, 10,
			&	0, 0, 0, 0,
			&	"ALPHA", true, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "PHONE", "Phone",  "", "",
			&	"", "PHONE", 179, 20,
			&	0, 0, 0, 0,
			&	"ALPHA", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "MOBILE_PHONE", "Mobile_phone",  "", "",
			&	"", "MOBILE_PHONE", 199, 20,
			&	0, 0, 0, 0,
			&	"ALPHA", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "EMAIL", "Email",  "", "",
			&	"", "EMAIL", 219, 50,
			&	0, 0, 0, 0,
			&	"ALPHA", false, 0, 0)
			
			staticSetFieldInfo(mStaticFieldList, mStaticFieldDictionary, "FILLER", "Filler",  "", "",
			&	"", "FILLER", 269, 500,
			&	0, 0, 0, 0,
			&	"ALPHA", false, 0, 0)

			mStaticFieldNameList.Add("Buyer_key")
			mStaticFieldHeadingList.Add("BUYER_KEY")
			mStaticFieldNameList.Add("Created_timestamp")
			mStaticFieldHeadingList.Add("Created on:")
			mStaticFieldNameList.Add("Modified_timestamp")
			mStaticFieldHeadingList.Add("MODIFIED_TIMESTAMP")
			mStaticFieldNameList.Add("Name")
			mStaticFieldHeadingList.Add("Buyer Name")
			mStaticFieldNameList.Add("Address1")
			mStaticFieldHeadingList.Add("Address 1")
			mStaticFieldNameList.Add("Address2")
			mStaticFieldHeadingList.Add("Address 2")
			mStaticFieldNameList.Add("Address3")
			mStaticFieldHeadingList.Add("Address 3")
			mStaticFieldNameList.Add("Postcode")
			mStaticFieldHeadingList.Add("Post Code")
			mStaticFieldNameList.Add("Phone")
			mStaticFieldHeadingList.Add("Phone Number")
			mStaticFieldNameList.Add("Mobile_phone")
			mStaticFieldHeadingList.Add("Mobile Phone Number")
			mStaticFieldNameList.Add("Email")
			mStaticFieldHeadingList.Add("Email Address")
			mStaticFieldNameList.Add("Filler")
			mStaticFieldHeadingList.Add("FILLER")

			mreturn
		endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Buyer_Data
            endparams
            parent()
        proc
			mDoneSynergyRecordValue = true
			doingClearFocus = false

			configureFieldInfo()
			setFieldNames()
			InitData()
			mDoneSynergyRecordValue = false
			extendedConstructor()
        endmethod

        ;;; <summary>
        ;;; Alternate constructor, accepts the inital value to assign to the object
        ;;; </summary>
        ;;; <param name="synRec">Provide the data to load into the _DATAOBJECT_</param>
        public method Buyer_Data
            in req synRec       ,String
            endparams
            parent()
        proc
			mDoneSynergyRecordValue = true
			doingClearFocus = false

			mIsNew = false
			configureFieldInfo()
			setFieldNames()
			buyer_main = synRec
			;OriginalSynergyRecord = synRec
			extendedConstructor()
        endmethod

		;;; <summary>
		;;; Alternate constructor, accepts the inital value to assign to the object
		;;; </summary>
		;;; <param name="synRec">Provide the data to load into the _DATAOBJECT_</param>
		public method Buyer_Data
			in req synRec       ,STRBuyer
			endparams
			parent()
		proc
			mDoneSynergyRecordValue = true
			doingClearFocus = false

			mIsNew = false
			configureFieldInfo()
			setFieldNames()
			buyer_main = synRec
			;OriginalSynergyRecord = synRec
			extendedConstructor()
		endmethod

		;;; <summary>
		;;; Alternate constructor, accepts the inital value to assign to the object.
		;;; Also accepts the boolean value to assign to the ObjectRaisesPropertyChanged property.
		;;; </summary>
		;;; <param name="synRec">Provide the data to load into the _DATAOBJECT_</param>
		;;; <param name="notifyUI">values passed onto the ObjectRaisesPropertyChanged property.</param>
		public method Buyer_Data
			in req synRec       ,String
			in req notifyUI		,DataObjectNotificationState
			endparams
			parent()
		proc
			mDoneSynergyRecordValue = true
			doingClearFocus = false

			ObjectRaisesPropertyChanged = notifyUI
			mIsNew = false
			configureFieldInfo()
			setFieldNames()
			buyer_main = synRec
			;OriginalSynergyRecord = synRec
			extendedConstructor()
		endmethod

		;;; <summary>
		;;; Alternate constructor, accepts the inital value to assign to the object.
		;;; Also accepts the boolean value to assign to the ObjectRaisesPropertyChanged property.
		;;; </summary>
		;;; <param name="synRec">Provide the data to load into the _DATAOBJECT_</param>
		;;; <param name="notifyUI">values passed onto the ObjectRaisesPropertyChanged property.</param>
		public method Buyer_Data
			in req synRec       ,STRBuyer
			in req notifyUI		,DataObjectNotificationState
			endparams
			parent()
		proc
			mDoneSynergyRecordValue = true
			doingClearFocus = false

			ObjectRaisesPropertyChanged = notifyUI
			mIsNew = false
			configureFieldInfo()
			setFieldNames()
			buyer_main = synRec
;			OriginalSynergyRecord = synRec
			extendedConstructor()
		endmethod

        ;;Set up the arrays of field details
        private method configureFieldInfo	,void
			endparams
		proc
			
			mfieldArray = mStaticFieldList
			mfieldDictionary = mStaticFieldDictionary

		endmethod

		private static mStaticFieldList			,@List<BaseFieldInformation>
		private static mStaticFieldDictionary	,@Dictionary<string, int>
		private static mStaticFieldNameList		,@List<String>
		private static mStaticFieldHeadingList	,@List<String>

        ;;Set up the arrays of field names and headings
        private method setFieldNames	,void
			endparams
		proc

			mFieldNames = mStaticFieldNameList
			mFieldHeadings = mStaticFieldHeadingList
			
		endmethod

        ;;Expose fields as properties for data binding

        ;;Buyer_key
		public property Buyer_key, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.buyer_key, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.buyer_key .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.buyer_key = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(1)
					RaisePropertyChanged("Buyer_key")
				end
			endmethod
		endproperty
        ;;Created_timestamp
		public property Created_timestamp, DateTime?
			method get
			proc
                data syndate	,a20	,%datetime_from_i8(buyer_main.created_timestamp)
                mreturn new DateTime(%integer(syndate(1:4)),%integer(syndate(5:2)),%integer(syndate(7:2)),%integer(syndate(9:2)),%integer(syndate(11:2)),%integer(syndate(13:2)))
			endmethod
		endproperty
        ;;Modified_timestamp
		public property Modified_timestamp, DateTime?
			method get
			proc
                data syndate	,a20	,%datetime_from_i8(buyer_main.modified_timestamp)
                mreturn new DateTime(%integer(syndate(1:4)),%integer(syndate(5:2)),%integer(syndate(7:2)),%integer(syndate(9:2)),%integer(syndate(11:2)),%integer(syndate(13:2)))
			endmethod
		endproperty
        ;;Name
		public property Name, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.name, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.name .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.name = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(4)
					RaisePropertyChanged("Name")
				end
			endmethod
		endproperty
        ;;Address1
		public property Address1, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.address1, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.address1 .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.address1 = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(5)
					RaisePropertyChanged("Address1")
				end
			endmethod
		endproperty
        ;;Address2
		public property Address2, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.address2, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.address2 .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.address2 = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(6)
					RaisePropertyChanged("Address2")
				end
			endmethod
		endproperty
        ;;Address3
		public property Address3, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.address3, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.address3 .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.address3 = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(7)
					RaisePropertyChanged("Address3")
				end
			endmethod
		endproperty
        ;;Postcode
		public property Postcode, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.postcode, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.postcode .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.postcode = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(8)
					RaisePropertyChanged("Postcode")
				end
			endmethod
		endproperty
        ;;Phone
		public property Phone, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.phone, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.phone .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.phone = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(9)
					RaisePropertyChanged("Phone")
				end
			endmethod
		endproperty
        ;;Mobile_phone
		public property Mobile_phone, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.mobile_phone, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.mobile_phone .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.mobile_phone = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(10)
					RaisePropertyChanged("Mobile_phone")
				end
			endmethod
		endproperty
        ;;Email
		public property Email, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.email, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.email .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.email = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(11)
					RaisePropertyChanged("Email")
				end
			endmethod
		endproperty
        ;;Filler
		public property Filler, String
			method get
			proc
				mreturn (string)mAlphaConveter.Convert(buyer_main.filler, ^null, ^null, ^null)
			endmethod
			method set
			proc
				if (Buyer_main.filler .nes. (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null))
				begin
					Buyer_main.filler = (a)mAlphaConveter.ConvertBack(value, ^null, ^null, ^null)
					ValidateEnteredData(12)
					RaisePropertyChanged("Filler")
				end
			endmethod
		endproperty
			
        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
		public override property SynergyRecord, String
            method get
            proc
                mreturn (String)Buyer_main
            endmethod
            method set
            proc
				if (!mDoneSynergyRecordValue)
					OriginalSynergyRecord = value

				mDoneSynergyRecordValue = true
				
				setUsed()
                Buyer_main = value

                ;;Signal that all fields have changed
                
                if (Buyer_store.buyer_key != Buyer_main.buyer_key)
                begin
                    SetFieldValid("Buyer_key")
					                    if (mValidateSynergyData) ValidateEnteredData(1)
                end
                if (Buyer_store.created_timestamp != Buyer_main.created_timestamp)
                begin
                    SetFieldValid("Created_timestamp")
					                    if (mValidateSynergyData) ValidateEnteredData(2)
                end
                if (Buyer_store.modified_timestamp != Buyer_main.modified_timestamp)
                begin
                    SetFieldValid("Modified_timestamp")
					                    if (mValidateSynergyData) ValidateEnteredData(3)
                end
                if (Buyer_store.name != Buyer_main.name)
                begin
                    SetFieldValid("Name")
					                    if (mValidateSynergyData) ValidateEnteredData(4)
                end
                if (Buyer_store.address1 != Buyer_main.address1)
                begin
                    SetFieldValid("Address1")
					                    if (mValidateSynergyData) ValidateEnteredData(5)
                end
                if (Buyer_store.address2 != Buyer_main.address2)
                begin
                    SetFieldValid("Address2")
					                    if (mValidateSynergyData) ValidateEnteredData(6)
                end
                if (Buyer_store.address3 != Buyer_main.address3)
                begin
                    SetFieldValid("Address3")
					                    if (mValidateSynergyData) ValidateEnteredData(7)
                end
                if (Buyer_store.postcode != Buyer_main.postcode)
                begin
                    SetFieldValid("Postcode")
					                    if (mValidateSynergyData) ValidateEnteredData(8)
                end
                if (Buyer_store.phone != Buyer_main.phone)
                begin
                    SetFieldValid("Phone")
					                    if (mValidateSynergyData) ValidateEnteredData(9)
                end
                if (Buyer_store.mobile_phone != Buyer_main.mobile_phone)
                begin
                    SetFieldValid("Mobile_phone")
					                    if (mValidateSynergyData) ValidateEnteredData(10)
                end
                if (Buyer_store.email != Buyer_main.email)
                begin
                    SetFieldValid("Email")
					                    if (mValidateSynergyData) ValidateEnteredData(11)
                end
                if (Buyer_store.filler != Buyer_main.filler)
                begin
                    SetFieldValid("Filler")
					                    if (mValidateSynergyData) ValidateEnteredData(12)
                end
				RaisePropertyChanged(^null)
				RaiseSynergyRecordChanged()
				
				Buyer_store = Buyer_main
				
            endmethod
        endproperty

        ;;; <summary>
        ;;; Allow the host to initialise all fields.
        ;;; </summary>
        public override method InitData ,void
        proc
			init Buyer_main
			RaisePropertyChanged(^null)
			parent.InitData()
        endmethod

        ;;; <summary>
        ;;; Allow the host to validate all fields. Each field will fire the validation method.
        ;;; </summary>
        public override method InitialValidateData, void
            endparams
        proc
			
				            ValidateEnteredData(1)
            RaisePropertyChanged("Buyer_key")
				            ValidateEnteredData(2)
            RaisePropertyChanged("Created_timestamp")
				            ValidateEnteredData(3)
            RaisePropertyChanged("Modified_timestamp")
				            ValidateEnteredData(4)
            RaisePropertyChanged("Name")
				            ValidateEnteredData(5)
            RaisePropertyChanged("Address1")
				            ValidateEnteredData(6)
            RaisePropertyChanged("Address2")
				            ValidateEnteredData(7)
            RaisePropertyChanged("Address3")
				            ValidateEnteredData(8)
            RaisePropertyChanged("Postcode")
				            ValidateEnteredData(9)
            RaisePropertyChanged("Phone")
				            ValidateEnteredData(10)
            RaisePropertyChanged("Mobile_phone")
				            ValidateEnteredData(11)
            RaisePropertyChanged("Email")
				            ValidateEnteredData(12)
            RaisePropertyChanged("Filler")

        endmethod

        ;;; <summary>
        ;;; Indicate from the UI which field now has focus. This then signals the
        ;;; CurrentFieldInfo change event so the UI can get the current field details
        ;;; </summary>
        ;;; <param name="fieldName">Name of field with focus</param>
        public override method SetFieldFocusFlag    ,void
            in req fieldName                        ,String
            endparams
        proc
            using fieldName select
			
			
            ("BUYER_KEY"), mCurrentField = 1
			
            ("CREATED_TIMESTAMP"), mCurrentField = 2
			
            ("MODIFIED_TIMESTAMP"), mCurrentField = 3
			
            ("NAME"), mCurrentField = 4
			
            ("ADDRESS1"), mCurrentField = 5
			
            ("ADDRESS2"), mCurrentField = 6
			
            ("ADDRESS3"), mCurrentField = 7
			
            ("POSTCODE"), mCurrentField = 8
			
            ("PHONE"), mCurrentField = 9
			
            ("MOBILE_PHONE"), mCurrentField = 10
			
            ("EMAIL"), mCurrentField = 11
			
            ("FILLER"), mCurrentField = 12
            (),
                mCurrentField = 0
            endusing
            RaisePropertyChanged("CurrentFieldInfo")
        endmethod

        ;;; <summary>
        ;;; Expose information about the current field
        ;;; </summary>
        ;;; <returns>Current field information</returns>
        public property CurrentFieldInfo    ,String
            method get
            proc
                using mCurrentField select
				
				
                (1),    mreturn ""
				
                (2),    mreturn ""
				
                (3),    mreturn ""
				
                (4),    mreturn ""
				
                (5),    mreturn ""
				
                (6),    mreturn ""
				
                (7),    mreturn ""
				
                (8),    mreturn ""
				
                (9),    mreturn ""
				
                (10),    mreturn ""
				
                (11),    mreturn ""
				
                (12),    mreturn ""
				(), mreturn ""  ;;if incorrect field value or not configured, ensure we clear the return value
                endusing
            endmethod
        endproperty

        ;;Expose properties to indicate whether fields are enabled
        
		

        public property Buyer_keyIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(1)
            endmethod
            method set
            proc
                SetFieldEnabledState(1, value)
                RaiseNonRPSPropertyChanged("Buyer_keyIsEnabled")
            endmethod
        endproperty
		

        public property Created_timestampIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(2)
            endmethod
            method set
            proc
                SetFieldEnabledState(2, value)
                RaiseNonRPSPropertyChanged("Created_timestampIsEnabled")
            endmethod
        endproperty
		

        public property Modified_timestampIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(3)
            endmethod
            method set
            proc
                SetFieldEnabledState(3, value)
                RaiseNonRPSPropertyChanged("Modified_timestampIsEnabled")
            endmethod
        endproperty
		

        public property NameIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(4)
            endmethod
            method set
            proc
                SetFieldEnabledState(4, value)
                RaiseNonRPSPropertyChanged("NameIsEnabled")
            endmethod
        endproperty
		

        public property Address1IsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(5)
            endmethod
            method set
            proc
                SetFieldEnabledState(5, value)
                RaiseNonRPSPropertyChanged("Address1IsEnabled")
            endmethod
        endproperty
		

        public property Address2IsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(6)
            endmethod
            method set
            proc
                SetFieldEnabledState(6, value)
                RaiseNonRPSPropertyChanged("Address2IsEnabled")
            endmethod
        endproperty
		

        public property Address3IsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(7)
            endmethod
            method set
            proc
                SetFieldEnabledState(7, value)
                RaiseNonRPSPropertyChanged("Address3IsEnabled")
            endmethod
        endproperty
		

        public property PostcodeIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(8)
            endmethod
            method set
            proc
                SetFieldEnabledState(8, value)
                RaiseNonRPSPropertyChanged("PostcodeIsEnabled")
            endmethod
        endproperty
		

        public property PhoneIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(9)
            endmethod
            method set
            proc
                SetFieldEnabledState(9, value)
                RaiseNonRPSPropertyChanged("PhoneIsEnabled")
            endmethod
        endproperty
		

        public property Mobile_phoneIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(10)
            endmethod
            method set
            proc
                SetFieldEnabledState(10, value)
                RaiseNonRPSPropertyChanged("Mobile_phoneIsEnabled")
            endmethod
        endproperty
		

        public property EmailIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(11)
            endmethod
            method set
            proc
                SetFieldEnabledState(11, value)
                RaiseNonRPSPropertyChanged("EmailIsEnabled")
            endmethod
        endproperty
		

        public property FillerIsEnabled, Boolean
            method get
            proc
                mreturn GetFieldEnabledState(12)
            endmethod
            method set
            proc
                SetFieldEnabledState(12, value)
                RaiseNonRPSPropertyChanged("FillerIsEnabled")
            endmethod
        endproperty

        ;;Expose properties to indicate whether fields are focussed
		private mBuyer_keyIsFocused	,Boolean
		public property Buyer_keyIsFocused, Boolean
			method get
			proc
				mreturn mBuyer_keyIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mBuyer_keyIsFocused = value
				RaiseNonRPSPropertyChanged("Buyer_keyIsFocused")
			endmethod
		endproperty
		private mCreated_timestampIsFocused	,Boolean
		public property Created_timestampIsFocused, Boolean
			method get
			proc
				mreturn mCreated_timestampIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mCreated_timestampIsFocused = value
				RaiseNonRPSPropertyChanged("Created_timestampIsFocused")
			endmethod
		endproperty
		private mModified_timestampIsFocused	,Boolean
		public property Modified_timestampIsFocused, Boolean
			method get
			proc
				mreturn mModified_timestampIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mModified_timestampIsFocused = value
				RaiseNonRPSPropertyChanged("Modified_timestampIsFocused")
			endmethod
		endproperty
		private mNameIsFocused	,Boolean
		public property NameIsFocused, Boolean
			method get
			proc
				mreturn mNameIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mNameIsFocused = value
				RaiseNonRPSPropertyChanged("NameIsFocused")
			endmethod
		endproperty
		private mAddress1IsFocused	,Boolean
		public property Address1IsFocused, Boolean
			method get
			proc
				mreturn mAddress1IsFocused
			endmethod
			method set
			proc
				clearFocus()
				mAddress1IsFocused = value
				RaiseNonRPSPropertyChanged("Address1IsFocused")
			endmethod
		endproperty
		private mAddress2IsFocused	,Boolean
		public property Address2IsFocused, Boolean
			method get
			proc
				mreturn mAddress2IsFocused
			endmethod
			method set
			proc
				clearFocus()
				mAddress2IsFocused = value
				RaiseNonRPSPropertyChanged("Address2IsFocused")
			endmethod
		endproperty
		private mAddress3IsFocused	,Boolean
		public property Address3IsFocused, Boolean
			method get
			proc
				mreturn mAddress3IsFocused
			endmethod
			method set
			proc
				clearFocus()
				mAddress3IsFocused = value
				RaiseNonRPSPropertyChanged("Address3IsFocused")
			endmethod
		endproperty
		private mPostcodeIsFocused	,Boolean
		public property PostcodeIsFocused, Boolean
			method get
			proc
				mreturn mPostcodeIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mPostcodeIsFocused = value
				RaiseNonRPSPropertyChanged("PostcodeIsFocused")
			endmethod
		endproperty
		private mPhoneIsFocused	,Boolean
		public property PhoneIsFocused, Boolean
			method get
			proc
				mreturn mPhoneIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mPhoneIsFocused = value
				RaiseNonRPSPropertyChanged("PhoneIsFocused")
			endmethod
		endproperty
		private mMobile_phoneIsFocused	,Boolean
		public property Mobile_phoneIsFocused, Boolean
			method get
			proc
				mreturn mMobile_phoneIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mMobile_phoneIsFocused = value
				RaiseNonRPSPropertyChanged("Mobile_phoneIsFocused")
			endmethod
		endproperty
		private mEmailIsFocused	,Boolean
		public property EmailIsFocused, Boolean
			method get
			proc
				mreturn mEmailIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mEmailIsFocused = value
				RaiseNonRPSPropertyChanged("EmailIsFocused")
			endmethod
		endproperty
		private mFillerIsFocused	,Boolean
		public property FillerIsFocused, Boolean
			method get
			proc
				mreturn mFillerIsFocused
			endmethod
			method set
			proc
				clearFocus()
				mFillerIsFocused = value
				RaiseNonRPSPropertyChanged("FillerIsFocused")
			endmethod
		endproperty

        ;;Expose properties to indicate whether fields are read only
		
		

		public property Buyer_keyIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(1)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(1, value)
				RaiseNonRPSPropertyChanged("Buyer_keyIsReadOnly")
			endmethod
		endproperty
		

		public property Created_timestampIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(2)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(2, value)
				RaiseNonRPSPropertyChanged("Created_timestampIsReadOnly")
			endmethod
		endproperty
		

		public property Modified_timestampIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(3)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(3, value)
				RaiseNonRPSPropertyChanged("Modified_timestampIsReadOnly")
			endmethod
		endproperty
		

		public property NameIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(4)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(4, value)
				RaiseNonRPSPropertyChanged("NameIsReadOnly")
			endmethod
		endproperty
		

		public property Address1IsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(5)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(5, value)
				RaiseNonRPSPropertyChanged("Address1IsReadOnly")
			endmethod
		endproperty
		

		public property Address2IsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(6)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(6, value)
				RaiseNonRPSPropertyChanged("Address2IsReadOnly")
			endmethod
		endproperty
		

		public property Address3IsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(7)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(7, value)
				RaiseNonRPSPropertyChanged("Address3IsReadOnly")
			endmethod
		endproperty
		

		public property PostcodeIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(8)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(8, value)
				RaiseNonRPSPropertyChanged("PostcodeIsReadOnly")
			endmethod
		endproperty
		

		public property PhoneIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(9)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(9, value)
				RaiseNonRPSPropertyChanged("PhoneIsReadOnly")
			endmethod
		endproperty
		

		public property Mobile_phoneIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(10)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(10, value)
				RaiseNonRPSPropertyChanged("Mobile_phoneIsReadOnly")
			endmethod
		endproperty
		

		public property EmailIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(11)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(11, value)
				RaiseNonRPSPropertyChanged("EmailIsReadOnly")
			endmethod
		endproperty
		

		public property FillerIsReadOnly, Boolean
			method get
			proc
				mreturn GetFieldReadOnlyState(12)
			endmethod
			method set
			proc
				SetFieldReadOnlyState(12, value)
				RaiseNonRPSPropertyChanged("FillerIsReadOnly")
			endmethod
		endproperty

		private doingClearFocus	,Boolean

		private method clearFocus, void
			endparams
		proc
			if (!doingClearFocus)
			begin
				doingClearFocus = true
				if (Buyer_keyIsFocused) Buyer_keyIsFocused = false
				if (Created_timestampIsFocused) Created_timestampIsFocused = false
				if (Modified_timestampIsFocused) Modified_timestampIsFocused = false
				if (NameIsFocused) NameIsFocused = false
				if (Address1IsFocused) Address1IsFocused = false
				if (Address2IsFocused) Address2IsFocused = false
				if (Address3IsFocused) Address3IsFocused = false
				if (PostcodeIsFocused) PostcodeIsFocused = false
				if (PhoneIsFocused) PhoneIsFocused = false
				if (Mobile_phoneIsFocused) Mobile_phoneIsFocused = false
				if (EmailIsFocused) EmailIsFocused = false
				if (FillerIsFocused) FillerIsFocused = false
				doingClearFocus = false
			end
		endmethod

		public method FieldErrorDetails	,void
			in req fldName				,String
			in req errorText			,String
			endparams
		proc
			setErrorDetails(fldName, errorText)
			RaisePropertyChanged(fldName)
		endmethod

		public method FieldValidDetails	,void
			in req fldName				,String
			endparams
		proc
			SetFieldValid(fldName)
			RaisePropertyChanged(fldName)
		endmethod

		public override method CompareObjects	,int
			in req obj1							,@Object
			in req obj2							,@Object
			in req colName						,String
			in req sortDir						,Symphony.Conductor.Framework.SynergySortOrder
			endparams

			record
				result		,int
			endrecord
		proc
			using colName select
			("Buyer_key"),
			begin
				if (((Buyer_Data)obj1).Buyer_key == ((Buyer_Data)obj2).Buyer_key) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Buyer_key > ((Buyer_Data)obj2).Buyer_key) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Created_timestamp"),
			begin
				if (((Buyer_Data)obj1).Created_timestamp == ((Buyer_Data)obj2).Created_timestamp) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Created_timestamp > ((Buyer_Data)obj2).Created_timestamp) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Modified_timestamp"),
			begin
				if (((Buyer_Data)obj1).Modified_timestamp == ((Buyer_Data)obj2).Modified_timestamp) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Modified_timestamp > ((Buyer_Data)obj2).Modified_timestamp) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Name"),
			begin
				if (((Buyer_Data)obj1).Name == ((Buyer_Data)obj2).Name) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Name > ((Buyer_Data)obj2).Name) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Address1"),
			begin
				if (((Buyer_Data)obj1).Address1 == ((Buyer_Data)obj2).Address1) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Address1 > ((Buyer_Data)obj2).Address1) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Address2"),
			begin
				if (((Buyer_Data)obj1).Address2 == ((Buyer_Data)obj2).Address2) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Address2 > ((Buyer_Data)obj2).Address2) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Address3"),
			begin
				if (((Buyer_Data)obj1).Address3 == ((Buyer_Data)obj2).Address3) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Address3 > ((Buyer_Data)obj2).Address3) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Postcode"),
			begin
				if (((Buyer_Data)obj1).Postcode == ((Buyer_Data)obj2).Postcode) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Postcode > ((Buyer_Data)obj2).Postcode) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Phone"),
			begin
				if (((Buyer_Data)obj1).Phone == ((Buyer_Data)obj2).Phone) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Phone > ((Buyer_Data)obj2).Phone) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Mobile_phone"),
			begin
				if (((Buyer_Data)obj1).Mobile_phone == ((Buyer_Data)obj2).Mobile_phone) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Mobile_phone > ((Buyer_Data)obj2).Mobile_phone) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Email"),
			begin
				if (((Buyer_Data)obj1).Email == ((Buyer_Data)obj2).Email) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Email > ((Buyer_Data)obj2).Email) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			("Filler"),
			begin
				if (((Buyer_Data)obj1).Filler == ((Buyer_Data)obj2).Filler) then
					result = 0
				else
				begin
					if (((Buyer_Data)obj1).Filler > ((Buyer_Data)obj2).Filler) then
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Ascending) then
							result = -1
						else
							result = 1
					end
					else
					begin
						if (sortDir == Symphony.Conductor.Framework.SynergySortOrder.Descending) then
							result = -1
						else
							result = 1
					end
				end
			end
			(),
				result = this.CustomCompareObjects(obj1, obj2, colName, sortDir)
			endusing

			mreturn result
		endmethod

		public override property StructureSize	,Int32
			method get
			proc
				mreturn RPSStructureSize
			endmethod
		endproperty

	endclass
endnamespace

