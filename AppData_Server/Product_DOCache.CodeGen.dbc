;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author:	Richard C. Morris, Synergex Professional Services Group
;;
;; Template Name:	Symphony Framework : SYMPHONY_DOCACHE_V3_3.tpl
;;****************************************************************************


import System
import System.Collections.Generic
import System.Text

import Synergex.SynergyDE.Select
import AppData

namespace AppData
	
	public class Product_DOCache
		
		private static mObjectCache	,@Dictionary<String, Product_Data>	,new Dictionary<String, Product_Data>()
		
		public static method DataObject	,@Product_Data
			in req keyValue		,String
			endparams

		proc
			data productRecord	,STRProduct
			data doObject				,@Product_Data
			if (!mObjectCache.TryGetValue(productRecord.str_Prod_code = keyValue, doObject))
			begin
				;;object not found in dictionary, load it.
				foreach productRecord in new Select(new From("SFEDATA:product.ism", productRecord),
				&	(Where) productRecord.str_Prod_code .eqs. keyValue
				&	)
				begin
					doObject = new Product_Data(productRecord)
					mObjectCache.Add(
					&	productRecord.str_Prod_code
					&	, doObject)
					exitloop
				end
			end
			
			mreturn doObject
		endmethod
		
		public static method InitCache, void
			endparams
		proc
			mObjectCache.Clear()
		endmethod

	endclass
	
endnamespace
