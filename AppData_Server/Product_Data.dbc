import System
import System.Collections.Generic
import System.Text
import Symphony.Conductor.Model

;;imports required to use data objects and file IO classes.
import AppData
import Symphony.Conductor.DataIO



namespace AppData
	
	public partial class Product_Data
		
		protected override method extendedConstructor, void
			endparams
		proc
			ValidateData += doDataChanged
			SynergyRecordChanged += synergychanged
			SynergyRecordChanged += refreshData

			;;if we have data passed to the constructor) then use it to populate the 
			;;aditional fields
			if (trim(product_main.str_prod_code)) synergychanged()
			
			
		endmethod
		
		private method doDataChanged, void
			inout req message			,@DataChangedMessage
			endparams
		proc


			using message.FieldName select
;;			("NAME"),	;;supplier name must be valid and more than 5 characters long.
;;				if (message.ValidationState == DataValidationState.OK && %trim(Name) < 5)
;;				begin
;;					message.FailReason = "supplier name is not long enough, must be 5 character or more."
;;					message.ValidationState = DataValidationState.Error
;;				end
			("SUPP_CODE"),
			begin
				if (findSupplier() != FileAccessResults.Success) then
				begin
					message.FailReason = "Supplier does not exist"
					message.ValidationState = DataValidationState.Error
				end
				else
					message.ValidationState = DataValidationState.OK
			end

			("PROD_GROUP"),
			begin
				if !findGroup() then
				begin
					message.FailReason = "Product Group does not exist"
					message.ValidationState = DataValidationState.Error
				end
				else
					message.ValidationState = DataValidationState.OK
			end
			endusing

		endmethod
		

;; this is where I can populate the extra fields I add to my data object		
		private method synergychanged, void
			endparams
		proc
			data logName	,a100
			data flag	,i4
			getlog('SFEImages',logName,flag)
			mProductImageFile = atrim(logName) + atrim(Prod_code) + '.jpg' 

			if Promotion then
				mPromotionImageFile = atrim(logName) + "Sale.png"
			else
				clear mPromotionImageFile

			findSupplier()

			findGroup()


		endmethod
		
		private method refreshData, void
			endparams
		proc
			RaisePropertyChanged(^null)
		endmethod


		
		private mSupplierName	,string

		private mGroupName	,string		

		private mProductImageFile	,string		

		private mPromotionImageFile	,string		

		public property SupplierName, string
			method get
			proc
				mreturn mSupplierName
			endmethod
			method set
			proc
				mSupplierName = value
				RaisePropertyChanged("SupplierName")
			endmethod
		endproperty
	
		public property GroupName, string
			method get
			proc
				mreturn mGroupName
			endmethod
			method set
			proc
				mGroupName = value
				RaisePropertyChanged("GroupName")
			endmethod
		endproperty
	
		public property ProductImageFile, string
			method get
			proc
				mreturn mProductImageFile
			endmethod
			method set
			proc
				mProductImageFile = value
				RaisePropertyChanged("ProductImageFile")
			endmethod
		endproperty

		public property PromotionImageFile, string
			method get
			proc
				mreturn mPromotionImageFile
			endmethod
			method set
			proc
				mProductImageFile = value
				RaisePropertyChanged("PromotionImageFile")
			endmethod
		endproperty


		;; set supplier name
		private method findSupplier, FileAccessResults
			endparams

		proc
			data response	,FileAccessResults
			data tmpDO = Supplier_DOCache.DataObject(supp_code)
			
			if (tmpDO != ^null) then
			begin
				response = FileAccessResults.Success
				SupplierName = tmpDO.Name
			end
			else
			begin
				response = FileAccessResults.RecordNotFound
				SupplierName = 'Supplier name...' + Supp_code
			end

			mreturn response
		endmethod

		private method findGroup, FileAccessResults

		proc
			data response	,FileAccessResults
			data tmpDO = Product_Group_DOCache.DataObject(prod_group)
			
			if (tmpDO != ^null) then
			begin
				response = FileAccessResults.Success
				GroupName = tmpDO.Group_desc
			end
			else
			begin
				response = FileAccessResults.RecordNotFound
				SupplierName = 'Group name...' + prod_group
			end
			
			mreturn response

		endmethod
			
	endclass
	
endnamespace
