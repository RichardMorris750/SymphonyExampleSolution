<!--
 WARNING: This code was generated by CodeGen. Any changes that you
          make to this code will be overwritten if the code is regenerated!

 Template author:	Richard C. Morris, Synergex Professional Services Group

 Template Name:	Symphony Framework : SYMPHONY_STYLE_V3_2.tpl

-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:clr="clr-namespace:System;assembly=mscorlib"
    xmlns:symphonyConverters="clr-namespace:Symphony.Conductor.Converters;assembly=SymphonyConductor"
    xmlns:symphonyTriggers="clr-namespace:Symphony.Conductor.Triggers;assembly=SymphonyConductor"
    xmlns:symphonyUI="clr-namespace:Symphony.Crescendo.Presentation;assembly=SymphonyCrescendo"
    xmlns:symphonyControls="clr-namespace:Symphony.Conductor.Controls;assembly=SymphonyConductor"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AppData;component/Resources/Selections_Content.CodeGen.xaml"/>
     </ResourceDictionary.MergedDictionaries>


	<clr:String x:Key="Selections_Start_supp_heading">First Supplier</clr:String>


	<Style x:Key="Selections_Start_supp_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="First Supplier"
						IsEnabled="{Binding Path=Start_suppIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Selections_Start_supp_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
						
                        Name="ctlSelections_Start_supp"
                        Text="{Binding Path=Start_supp, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="6"
						Width="72"
						CharacterCasing="Upper"
                        IsEnabled="{Binding Path=Start_suppIsEnabled}"
						IsReadOnly="{Binding Path=Start_suppIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Start_suppIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSelections_Start_supp}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Selections_Start_prod_heading">First Product</clr:String>


	<Style x:Key="Selections_Start_prod_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Starting Product"
						IsEnabled="{Binding Path=Start_prodIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Selections_Start_prod_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
						
                        Name="ctlSelections_Start_prod"
                        Text="{Binding Path=Start_prod, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="6"
						Width="72"
						CharacterCasing="Upper"
                        IsEnabled="{Binding Path=Start_prodIsEnabled}"
						IsReadOnly="{Binding Path=Start_prodIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Start_prodIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSelections_Start_prod}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Selections_End_supp_heading">Last Supplier</clr:String>


	<Style x:Key="Selections_End_supp_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Last Supplier"
						IsEnabled="{Binding Path=End_suppIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Selections_End_supp_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
						
                        Name="ctlSelections_End_supp"
                        Text="{Binding Path=End_supp, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="6"
						Width="72"
						CharacterCasing="Upper"
                        IsEnabled="{Binding Path=End_suppIsEnabled}"
						IsReadOnly="{Binding Path=End_suppIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=End_suppIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSelections_End_supp}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Selections_End_prod_heading">Last Product</clr:String>


	<Style x:Key="Selections_End_prod_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Last Product"
						IsEnabled="{Binding Path=End_prodIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Selections_End_prod_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
						
                        Name="ctlSelections_End_prod"
                        Text="{Binding Path=End_prod, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="6"
						Width="72"
						CharacterCasing="Upper"
                        IsEnabled="{Binding Path=End_prodIsEnabled}"
						IsReadOnly="{Binding Path=End_prodIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=End_prodIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSelections_End_prod}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Selections_Keyword_heading">Key Word</clr:String>


	<Style x:Key="Selections_Keyword_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Key Word"
						IsEnabled="{Binding Path=KeywordIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Selections_Keyword_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
						
                        Name="ctlSelections_Keyword"
                        Text="{Binding Path=Keyword, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="20"
						Width="240"
                        IsEnabled="{Binding Path=KeywordIsEnabled}"
						IsReadOnly="{Binding Path=KeywordIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						            <i:Interaction.Behaviors>
						              <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
						            </i:Interaction.Behaviors>
						            <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=KeywordIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlSelections_Keyword}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	<clr:String x:Key="Selections_Report_type_heading">Report Type</clr:String>


	<Style x:Key="Selections_Report_type_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Report Type"
						IsEnabled="{Binding Path=Report_typeIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <Style x:Key="Selections_Report_type_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="auto"></RowDefinition>
						</Grid.RowDefinitions>
						<ComboBox Grid.Row="0"
							
							Visibility="{Binding Path=Report_typeIsReadOnly, Converter={StaticResource reverseBooleanToVisibilityConverter}}"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Name="ctlSelections_Report_type"
							ItemsSource="{Binding Source={StaticResource REPORT_TYPEitems}}"
							DisplayMemberPath="Description"
							SelectedValue="{Binding Path=Report_type, Converter={StaticResource alphaConverter},
							ValidatesOnDataErrors=True}"
							Validation.ErrorTemplate="{StaticResource validationTemplate}"
							SelectedValuePath="ItemStringValue"
							IsEnabled="{Binding Path=Report_typeIsEnabled}"
							Width="300"
							Margin="0,1,0,1"
							ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
							<ComboBox.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=Report_typeIsFocused}" Value="true">
											<Setter Property="FocusManager.FocusedElement"
													Value="{Binding ElementName=ctlSelections_Report_type}"></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
											<Setter Property="ComboBox.Background">
												<Setter.Value>
													<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
														<LinearGradientBrush.GradientStops>
															<GradientStop Offset="0.2" Color="WhiteSmoke" />
															<GradientStop Offset="3" Color="Red" />
														</LinearGradientBrush.GradientStops>
													</LinearGradientBrush>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ComboBox.Style>
						</ComboBox>
						<TextBox Grid.Row="0"
								
                                 Width="300"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
						         Margin="0,1,0,1"
                                 Text="{Binding ElementName=ctlSelections_Report_type, Path=Text}"
                                 Visibility="{Binding Path=Report_typeIsReadOnly, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 IsReadOnly="True">
                        </TextBox>
					</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>

