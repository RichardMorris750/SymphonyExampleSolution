;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author:	Richard C. Morris, Synergex Professional Services Group
;;
;; Template Name:	Symphony Framework : SYMPHONY_DOCACHE_V3_3.tpl
;;****************************************************************************


import System
import System.Collections.Generic
import System.Text

import Synergex.SynergyDE.Select
import AppData

import AppData

namespace AppData
	
	public class Supplier_DOCache
		
		private static mObjectCache	,@Dictionary<String, Supplier_Data>	,new Dictionary<String, Supplier_Data>()
		
		public static method DataObject	,@Supplier_Data
			in req keyValue		,String
			endparams

			.include 'supplier' repository, record = "supplierRecord"

		proc
			data doObject	,@Supplier_Data
			if (!mObjectCache.TryGetValue(supplierRecord.Supp_code = keyValue, doObject))
			begin
				;;object not found in dictionary, load it.
				foreach supplierRecord in new Select(new From("SFEDATA:supplier.ism", supplierRecord),
				&	(Where) supplierRecord.Supp_code .eqs. keyValue
				&	)
				begin
					doObject = new Supplier_Data(supplierRecord)
					mObjectCache.Add(
					&	supplierRecord.Supp_code
					&	, doObject)
					exitloop
				end
			end
			
			mreturn doObject
		endmethod
		
		public static method InitCache, void
			endparams
		proc
			mObjectCache.Clear()
		endmethod

	endclass
	
endnamespace
