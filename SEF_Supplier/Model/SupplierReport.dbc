import System
import System.Collections.Generic
import System.Text

import Symphony.Conductor.ViewModel
import System.Windows
import System.Collections.ObjectModel
import AppData
import Symphony.Harmony

;;use the extension methods
import System.Linq
import Symphony.Conductor.Model
import Symphony.Conductor.Commands
import Symphony.Conductor.DataIO
import Symphony.Conductor.Types

import SFEUtilities

namespace SEF_Supplier
	
	public class SupplierReport
		
		private static mConnector		,@DBConnector
		
		public static method Print		, void
			in req ReportType	,a		;R = Print API, P = PDF
			in req KeyValue		,a		; Partial code
			in req KeyWord		,a		; description key word

			endparams
			
			.include 'DBLDIR:winprint.def'
			
			
			
		proc
			;;let's load the product using Symphony Harmony and a local connection
			
			mConnector = new DBConnector("SYMLOCAL:richard/morris!AppData.TableMapper.MapTableToFile")
			
			;;To enable case insensitive comparisons:
			mConnector.SetCaseSensitivity(false)			


			SFEUtilities.SFEPrinting.PrinterOpen(ReportType,false,110,100,200,200,100,true,true)			

			data supplierObj	,@Supplier_Data	,new Supplier_Data()
			
			data dataSearch	,@DataSelect
			
			data lineCount,	i4	
			data firstPage	,boolean, true
		
			if (!KeyWord && !KeyValue)
				dataSearch = new DataSelect(mConnector, "select * from supplier", new Supplier_Data())
				
			if (!KeyWord && KeyValue)
				dataSearch = new DataSelect(mConnector, "select * from supplier where supp_code like:1", new Supplier_Data(), KeyValue)

			if (!KeyValue && KeyWord)
				dataSearch = new DataSelect(mConnector, "select * from supplier where name like:1", new Supplier_Data(), KeyWord)

			if (KeyValue && KeyWord)
				dataSearch = new DataSelect(mConnector, "select * from supplier where supp_code like:1 and name like:2", new Supplier_Data(), KeyValue,KeyWord)

			foreach supplierObj in dataSearch
			begin
				SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				if firstPage || SFEUtilities.SFEPrinting.LinesLeft < 8
				begin
					if !firstPage
						SFEUtilities.SFEPrinting.FormFeed()
					
					firstPage = false
						
					SFEUtilities.SFEPrinting.SetFont("Cambria",14)
					SFEUtilities.SFEPrinting.PrintField(1,1,"Supplier Listing Report")
					SFEUtilities.SFEPrinting.SetFont("Cambria",12)
					SFEUtilities.SFEPrinting.PrintField(3,1,"Code")
					SFEUtilities.SFEPrinting.PrintField(3,10,"Name & Address")
					SFEUtilities.SFEPrinting.PrintField(3,43,"Phone No")
					SFEUtilities.SFEPrinting.PrintField(3,60,"Email")
					lineCount = 4					
					SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				end
					
					
				incr lineCount
				SFEUtilities.SFEPrinting.PrintField(lineCount,1,supplierObj.Supp_code)
				SFEUtilities.SFEPrinting.PrintField(lineCount,10,supplierObj.Name)
				SFEUtilities.SFEPrinting.PrintField(lineCount,43,supplierObj.Phone)
				SFEUtilities.SFEPrinting.PrintField(lineCount,60,supplierObj.Email)
					
				if supplierObj.address1
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,supplierObj.Address1)			
				end
					
				if supplierObj.address2
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,supplierObj.Address2)		
				end
					
				if supplierObj.address3
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,supplierObj.Address3)		
				end
					
				if supplierObj.postcode
				begin				
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,supplierObj.Postcode)		
				end
					
				incr lineCount
				SFEUtilities.SFEPrinting.SetFont(,10)
			end
			
			SFEUtilities.SFEPrinting.PrinterClose()
			
			mreturn
			
		endmethod
		
	endclass
endnamespace		
