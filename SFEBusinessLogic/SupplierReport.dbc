import System
import System.Collections.Generic
import System.Text

import Symphony.Conductor.ViewModel
import System.Windows
import System.Collections.ObjectModel
import AppData
import Symphony.Harmony

;;use the extension methods
import System.Linq
import Symphony.Conductor.Model
import Symphony.Conductor.Commands
import Symphony.Conductor.DataIO
import Symphony.Conductor.Types

import SFEUtilities

namespace SFEBusinessLogic
	
	public class SupplierReport
		
		private static mConnector		,@DBConnector
		
		public static method Print		, void
			in req StartSupp	,a		; starting supplier
			in req EndSupp		,a		; ending supplier
			in req ReportType	,a		;R = Print API, P = PDF
			endparams
			
			.include 'DBLDIR:winprint.def'
			

				
		proc
			;;let's load the supplier using Symphony Harmony and a local connection
			
			mConnector = new DBConnector("SYMLOCAL:richard/morris!AppData.TableMapper.MapTableToFile")
			
			;;To enable case insensitive comparisons:
			mConnector.SetCaseSensitivity(false)
			
			if ReportType == 'P' then
			begin	
				SFEUtilities.SFEPrinting.createPDF(false)
			end
			else			
				SFEUtilities.SFEPrinting.PrinterOpen(false)
			
			SFEUtilities.SFEPrinting.SetFont("Optima",12)
			
			data suppObj	,@Supplier_Data	,new Supplier_Data()
			
			data dataSearch	,@DataSelect
			
			data pline	,a132
			data lineCount,	i4	,99
			data lineMax	,i4	,60
			
			dataSearch = new DataSelect(mConnector, "select * from supplier where supp_code >=:1 and supp_code <= :2", new Supplier_Data(), StartSupp,EndSupp)
			
			foreach suppObj in dataSearch
			begin
				if lineCount .ge. lineMax
				begin
					if lineCount .ne.99
						SFEUtilities.SFEPrinting.FormFeed()
					
					SFEUtilities.SFEPrinting.SetFont("Cambria",12)
					SFEUtilities.SFEPrinting.Write(1,1,"Supplier Listing Report")

					SFEUtilities.SFEPrinting.SetFont("Calibri",10,DWPFW_BOLD)

					SFEUtilities.SFEPrinting.Write(3,0," ")			;; just in case it needs to print something to get the next fields to line up
					SFEUtilities.SFEPrinting.Write(3,1,"Code")
					SFEUtilities.SFEPrinting.Write(3,10,"Name & Address")
					SFEUtilities.SFEPrinting.Write(3,42,"Phone No")
					SFEUtilities.SFEPrinting.Write(3,59,"Email")
					lineCount = 4					
					SFEUtilities.SFEPrinting.SetFont("Calibri",10,DWPFW_NORMAL)
				end
				

				incr lineCount
				SFEUtilities.SFEPrinting.Write(lineCount,1,suppObj.Supp_code)
				SFEUtilities.SFEPrinting.Write(lineCount,10,suppObj.Name)
				SFEUtilities.SFEPrinting.Write(lineCount,43,suppObj.Phone)
				SFEUtilities.SFEPrinting.Write(lineCount,60,suppObj.Email)
				
				if suppObj.address1
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.Write(lineCount,10,suppObj.Address1)			
				end
				
				if suppObj.address2
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.Write(lineCount,10,suppObj.Address2)		
				end
				
				if suppObj.address3
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.Write(lineCount,10,suppObj.Address3)		
				end
				
				if suppObj.postcode
				begin				
					incr lineCount
					SFEUtilities.SFEPrinting.Write(lineCount,10,suppObj.Postcode)		
				end
		
				incr lineCount
		
			end
			
			SFEUtilities.SFEPrinting.PrinterClose()
			
			mreturn
			
		endmethod
		
	endclass
endnamespace
