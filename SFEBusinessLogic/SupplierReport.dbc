
import System
import System.Collections.Generic
import System.Text

import Symphony.Conductor.ViewModel
import System.Windows
import System.Collections.ObjectModel
import AppData
import Symphony.Harmony

;;use the extension methods
import System.Linq
import Symphony.Conductor.Model
import Symphony.Conductor.Commands
import Symphony.Conductor.DataIO
import Symphony.Conductor.Types

import SFEUtilities

namespace SFEBusinessLogic
	
	public class SupplierReport
		
		private static mConnector		,@DBConnector
		
		public static method Print		,void
		in req StartSupp				,a		; starting supplier
		in req EndSupp					,a		; ending supplier
		in req ReportType				,a		;R = Print API, P = PDF
		endparams
			

					
			
		proc
			;;let's load the supplier using Symphony Harmony and a local connection
			
			mConnector = new DBConnector("SYMLOCAL:richard/morris!AppData.TableMapper.MapTableToFile")
			
			;;To enable case insensitive comparisons:
			mConnector.SetCaseSensitivity(false)
						
			SFEUtilities.SFEPrinting.PrinterOpen(ReportType,false,80)
			
			SFEUtilities.SFEPrinting.SetFont("Cambria",12)
			
		data suppObj					,@Supplier_Data		,new Supplier_Data()
			
		data dataSearch					,@DataSelect

		data lineCount					,i4					,99
		data lineMax					,i4					,60
			
			dataSearch = DataSelect.RunDataSelect(mConnector, "select * from supplier where supp_code >=:1 and supp_code <= :2", 
			&	new Supplier_Data()		,StartSupp			,EndSupp).Result
			
			foreach suppObj in dataSearch
			begin
				if (lineCount >= lineMax)
				begin
					if (lineCount != 99)
						SFEUtilities.SFEPrinting.FormFeed()
					
					SFEUtilities.SFEPrinting.SetFont("Cambria",14)
					SFEUtilities.SFEPrinting.PrintField(1,1,"Supplier Listing Report")
					SFEUtilities.SFEPrinting.PrintField(3,1,"Code")
					SFEUtilities.SFEPrinting.PrintField(3,10,"Name & Address")
					SFEUtilities.SFEPrinting.PrintField(3,43,"Phone No")
					SFEUtilities.SFEPrinting.PrintField(3,60,"Email")
					lineCount = 4					
					SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				end
				
				
				incr lineCount
				SFEUtilities.SFEPrinting.PrintField(lineCount,1,suppObj.Supp_code)
				SFEUtilities.SFEPrinting.PrintField(lineCount,10,suppObj.Name)
				SFEUtilities.SFEPrinting.PrintField(lineCount,43,suppObj.Phone)
				SFEUtilities.SFEPrinting.PrintField(lineCount,60,suppObj.Email)
				
				if (suppObj.address1)
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,suppObj.Address1)			
				end
				
				if (suppObj.address2)
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,suppObj.Address2)		
				end
				
				if (suppObj.address3)
				begin
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,suppObj.Address3)		
				end
				
				if (suppObj.postcode)
				begin				
					incr lineCount
					SFEUtilities.SFEPrinting.PrintField(lineCount,10,suppObj.Postcode)		
				end
				
				incr lineCount
				SFEUtilities.SFEPrinting.SetFont(,12)
				SFEUtilities.SFEPrinting.PrintField(lineCount,1,'END OF SUPPLIER')

				SFEUtilities.SFEPrinting.SetFont(,10)
			end
			
			SFEUtilities.SFEPrinting.PrinterClose()
			
			mreturn
			
		endmethod
		
	endclass
endnamespace
