import System
import System.Collections.Generic
import System.Text

import Symphony.Conductor.ViewModel
import System.Windows
import System.Collections.ObjectModel
import AppData
import Symphony.Harmony

;;use the extension methods
import System.Linq
import Symphony.Conductor.Model
import Symphony.Conductor.Commands
import Symphony.Conductor.DataIO
import Symphony.Conductor.Types

import SFEUtilities

namespace SFE_Product
	
	public class ProductReport
		
		private static mConnector		,@DBConnector
		
		public static method Print		, void
			in req ReportType	,a		;R = Print API, P = PDF
			in req KeyValue		,a		; Partial code
			in req KeyWord		,a		; description key word

			endparams
			
			.include 'DBLDIR:winprint.def'
			
			
			
		proc
			;;let's load the product using Symphony Harmony and a local connection
			
			mConnector = new DBConnector("SYMLOCAL:richard/morris!AppData.TableMapper.MapTableToFile")
			
			;;To enable case insensitive comparisons:
			mConnector.SetCaseSensitivity(false)
						
			SFEUtilities.SFEPrinting.PrinterOpen(ReportType,false,110,200,200,200,200,true,true)
			
			SFEUtilities.SFEPrinting.SetFont("Cambria",12)
			

			data productObj	,@Product_Data	,new Product_Data()
			
			data dataSearch	,@DataSelect
			
			data lineCount,	i4	
			data firstPage	,boolean, true
		
			if (!KeyWord && !KeyValue)
				dataSearch = new DataSelect(mConnector, "select * from product", new Product_Data())
				
			if (!KeyWord && KeyValue)
				dataSearch = new DataSelect(mConnector, "select * from product where prod_code like:1", new Product_Data(), KeyValue)

			if (!KeyValue && KeyWord)
				dataSearch = new DataSelect(mConnector, "select * from product where prod_description like:1", new Product_Data(), KeyWord)

			if (KeyValue && KeyWord)
				dataSearch = new DataSelect(mConnector, "select * from product where prod_code like:1 and prod_description like:2", new Product_Data(), KeyValue,KeyWord)

			foreach productObj in dataSearch
			begin
				SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				if firstPage || SFEUtilities.SFEPrinting.LinesLeft < 11
				begin
					if !firstPage
						SFEUtilities.SFEPrinting.FormFeed()
					
					firstPage = false

					SFEUtilities.SFEPrinting.SetFont("Cambria",12,,"blue")
					SFEUtilities.SFEPrinting.PrintField(1,1,"Product Listing")
					SFEUtilities.SFEPrinting.PrintField(3,1,"Code")
					SFEUtilities.SFEPrinting.PrintField(3,10,"Description")
					SFEUtilities.SFEPrinting.PrintField(3,42,"Supplier")
					SFEUtilities.SFEPrinting.PrintField(3,70,"Group")
					SFEUtilities.SFEPrinting.PrintField(3,90,"Pack Size")

					lineCount = 4					
					SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				end
				
				
				incr lineCount
				SFEUtilities.SFEPrinting.SetFont("Calibri",10,,"black")
				SFEUtilities.SFEPrinting.PrintField(lineCount,1,productObj.prod_code)
				SFEUtilities.SFEPrinting.PrintField(lineCount,10,productObj.prod_description)
				SFEUtilities.SFEPrinting.PrintField(lineCount,42,productObj.supp_code)
				SFEUtilities.SFEPrinting.PrintField(lineCount,50,productObj.SupplierName)
				SFEUtilities.SFEPrinting.PrintField(lineCount,70,productObj.GroupName)
				SFEUtilities.SFEPrinting.PrintField(lineCount,90,productObj.Pack_size)

				SFEUtilities.SFEPrinting.PrintImage(productObj.ProductImageFile,lineCount+1,20,lineCount +6,40)

				if productObj.PromotionImageFile != ^null
					SFEUtilities.SFEPrinting.PrintImage(productObj.PromotionImageFile,lineCount+2,50,lineCount +4,60)


				SFEUtilities.SFEPrinting.PrintField(lineCount+2,75,"Selling Price")

				SFEUtilities.SFEPrinting.box(lineCount + 2,70, lineCount + 4,110,50,'lightblue')

				SFEUtilities.SFEPrinting.SetFont("Calibri",10,,"black","lightblue")
				SFEUtilities.SFEPrinting.PrintField(lineCount+2,75,"Selling Price")
				SFEUtilities.SFEPrinting.SetFont("Consolas",10)
				SFEUtilities.SFEPrinting.PrintField(lineCount+2,95,string(productObj.Sell_price,'ZZZX.XX'))

				SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				SFEUtilities.SFEPrinting.PrintField(lineCount+3,75,"Cost Price")
				SFEUtilities.SFEPrinting.SetFont("Consolas",10)
				SFEUtilities.SFEPrinting.PrintField(lineCount+3,95,string(productObj.Cost_price,'ZZZX.XX'))

				SFEUtilities.SFEPrinting.SetFont("Calibri",10)
				SFEUtilities.SFEPrinting.PrintField(lineCount+4,75,"% Profit")
								
				data prof		,d10
				data sellPrice	,d10
				data costPrice	,d10

				sellPrice = productObj.Sell_price
				costPrice = productObj.Cost_price
	
				if (SellPrice)
					prof = (((SellPrice - costPrice)*100000)/ sellPrice) #1
				
				if prof < 0
					SFEUtilities.SFEPrinting.SetFont(,,,"red")
				
				SFEUtilities.SFEPrinting.PrintField(lineCount+4,95,string(prof,'ZZZX.XX-')+'%')
				SFEUtilities.SFEPrinting.SetFont(,,,"black","white")
				
				lineCount += 6
			end
			
			SFEUtilities.SFEPrinting.PrinterClose()
			
			mreturn
			
		endmethod
		
	endclass
endnamespace
