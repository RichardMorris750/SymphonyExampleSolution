<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:symphonyControls="clr-namespace:Symphony.Conductor.Controls;assembly=SymphonyConductor">

    <!--
    <Color x:Key="OldGreyColour">#252525</Color>
    <Color x:Key="GreyColour">#52658f</Color>
    <Color x:Key="BlackColour">#333a56</Color>
    <Color x:Key="OldBlackColour">#000000</Color>
    <Color x:Key="BlueColour" >#42A0FF</Color>
    <Color x:Key="OldBlueColour" >#0070DF</Color>   
    <Color x:Key="BrightBlueColour" >#42A0FF</Color>
    <Color x:Key="OldWhiteColour">#F0F0F0</Color>
    <Color x:Key="WhiteColour">#f7f5f6</Color>
    <Color x:Key="OrangeColour">#f7f5e6</Color>
    <Color x:Key="OldOrangeColour">#D7BA7D</Color>    
    
    -->

    <Color x:Key="GreyColour">#333a56</Color>
    <Color x:Key="BlackColour">#333a56</Color>
    <Color x:Key="BlueColour" >#0070DF</Color>
    <Color x:Key="BrightBlueColour" >#42A0FF</Color>
    <Color x:Key="WhiteColour">#F0F0F0</Color>
    <Color x:Key="OrangeColour">#F0F0F0</Color>

    <SolidColorBrush x:Key="BackgroundPrimaryBrush" Color="{StaticResource GreyColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundSecondaryBrush" Color="{StaticResource BlackColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="GridHeaderBackgroundBrush" Color="{StaticResource BlackColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="GridHeaderForegroundBrush" Color="{StaticResource BrightBlueColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="GridHeaderBorderBrush" Color="{StaticResource BlueColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="GridItemBackgroundBrush" Color="{StaticResource GreyColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="GridItemForegroundBrush" Color="{StaticResource OrangeColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="GridItemDisabledForegroundBrush" Color="{StaticResource WhiteColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="LabelColorBrush" Color="{StaticResource WhiteColour}"></SolidColorBrush>
    <!--   <SolidColorBrush x:Key="LabelColorBrush" Color="{StaticResource BrightBlueColour}"></SolidColorBrush>  -->
    <!--    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource GreyColour}"></SolidColorBrush>  -->
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource WhiteColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="InputForegroundBrush" Color="{StaticResource BrightBlueColour}"></SolidColorBrush>
    <!--<SolidColorBrush x:Key="InputForegroundBrush" Color="{StaticResource WhiteColour}"></SolidColorBrush>  -->
    <SolidColorBrush x:Key="InputInErrorForegroundBrush" Color="Red"></SolidColorBrush>
    <SolidColorBrush x:Key="StatusBarItemBackgroundBrush" Color="Transparent"></SolidColorBrush>
    <SolidColorBrush x:Key="StatusBarItemForegroundBrush" Color="{StaticResource OrangeColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BlueColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuItemBrush" Color="{StaticResource BlueColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuItemTextBrush" Color="{StaticResource OrangeColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource BlackColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonActiveBackgroundBrush" Color="{StaticResource OrangeColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonTextBrush" Color="{StaticResource OrangeColour}"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonDisabledTextBrush" Color="{StaticResource GreyColour}"></SolidColorBrush>

    <SolidColorBrush x:Key="CaretBrush" Color="{StaticResource OrangeColour}"></SolidColorBrush>

    <Style TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="1,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.0" Color="{StaticResource GreyColour}" />
                        <GradientStop Offset="1.0" Color="{StaticResource BlackColour}" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="80"></Setter>
        <Setter Property="Width" Value="100"></Setter>
        <Setter Property="Foreground" Value="{StaticResource MenuItemTextBrush}"></Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StandardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="6,4,6,4"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledTextBrush}"></Setter>
            </Trigger>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransperentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="{StaticResource LabelColorBrush}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrush}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="CaretBrush" Value="{StaticResource CaretBrush}"></Setter>
    </Style>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="1,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.0" Color="{StaticResource BlackColour}" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="GridLinesVisibility" Value="None"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="1,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.0" Color="{StaticResource BlackColour}" />
                        <GradientStop Offset="1.0" Color="{StaticResource GreyColour}" />

                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{StaticResource GridItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridItemForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource GridItemBackgroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Foreground" Value="{StaticResource GridItemForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource GridItemDisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource GridHeaderBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource GridHeaderForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>






</ResourceDictionary>