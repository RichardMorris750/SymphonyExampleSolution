<!--
 WARNING: This code was generated by CodeGen. Any changes that you
          make to this code will be overwritten if the code is regenerated!

 Template author:   Richard C. Morris, RCP Consultants

 Template Name: Symphony Framework : SYMPHONY_STYLE_SFE.tpl

-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:clr="clr-namespace:System;assembly=mscorlib"
    xmlns:symphonyConverters="clr-namespace:Symphony.Conductor.Converters;assembly=SymphonyConductor"
    xmlns:symphonyTriggers="clr-namespace:Symphony.Conductor.Triggers;assembly=SymphonyConductor"
    xmlns:symphonyUI="clr-namespace:Symphony.Crescendo.Presentation;assembly=SymphonyCrescendo"
    xmlns:symphonyControls="clr-namespace:Symphony.Conductor.Controls;assembly=SymphonyConductor"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SFE_UI;component/Resources/AppStyling.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SFE_UI;component/Resources/Order_header_Content.CodeGen.xaml"/>
     </ResourceDictionary.MergedDictionaries>


    <clr:String x:Key="Order_header_Order_no_heading">Order No</clr:String>


    <Style x:Key="Order_header_Order_no_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Order No"
                        IsEnabled="{Binding Path=Order_noIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Order_no_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SynergyDecimalBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                         HorizontalContentAlignment="Right"
                        Name="ctlOrder_header_Order_no"
                        Text="{Binding Path=Order_no, Converter={StaticResource decimalConverter}  
                        ,UpdateSourceTrigger=Default
                        ,ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        IsEnabled="{Binding Path=Order_noIsEnabled}"
                        IsReadOnly="{Binding Path=Order_noIsReadOnly}"
                        SynergyDecimalField="False" 
                        MaxLength="6"
                        FontSize="{StaticResource StandardFontSize}"
                        Width="72"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                        <symphonyUI:SynergyDecimalBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Order_noIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Order_no}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SynergyDecimalBox.Style>
                    </symphonyUI:SynergyDecimalBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Supp_code_heading">Supplier</clr:String>


    <Style x:Key="Order_header_Supp_code_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Supplier"
                        IsEnabled="{Binding Path=Supp_codeIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Supp_code_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
                        
                        HorizontalAlignment="Left"
                        Name="ctlOrder_header_Supp_code"
                        Text="{Binding Path=Supp_code, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        SearchMode="Delayed"
                        
                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.NavigateState}"
                        CommandParameter="SupplierCodeDrillState"
                        MaxLength="6"
                        Width="100"
                        IsEnabled="{Binding Path=Supp_codeIsEnabled}"
                        IsReadOnly="{Binding Path=Supp_codeIsReadOnly}"
                        VerticalAlignment="Center"
                        FontSize="{StaticResource StandardFontSize}"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Supp_codeIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Supp_code}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Order_header_Supp_code_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        Name="ctlOrder_header_Supp_code_noDrill"
                        Text="{Binding Path=Supp_code, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="6"
                        Width="100"
                        IsEnabled="{Binding Path=Supp_codeIsEnabled}"
                        IsReadOnly="{Binding Path=Supp_codeIsReadOnly}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          FontSize="{StaticResource StandardFontSize}"
                          ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                          <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                                    <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Supp_codeIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Supp_code_noDrill}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Order_date_heading">Order Date</clr:String>


    <Style x:Key="Order_header_Order_date_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Order Date"
                        IsEnabled="{Binding Path=Order_dateIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Order_date_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <DatePicker
                        
                        HorizontalAlignment="Left"
                        Name="ctlOrder_header_Order_date"
                        SelectedDate="{Binding Path=Order_date, Converter={StaticResource decimalDateConverter}, UpdateSourceTrigger=Default,
                                ConverterParameter=FORMAT:YYYYMMDD|NODEFAULTODAY,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                IsEnabled="{Binding Path=Order_dateIsEnabled}"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource StandardFontSize}"
                                ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <DatePicker.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Order_dateIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Order_date}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="DatePicker.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="DatePicker.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="DatePicker.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="DatePicker.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DatePicker.Style>
                    </DatePicker>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Order_header_Order_date_RO_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        IsReadOnly="True"
                        Text="{Binding Path=Order_date, Converter={StaticResource decimalDateConverter},
                        ConverterParameter=FORMAT:YYYYMMDD|NODEFAULTODAY
                        , StringFormat=\{0:d\}}"
                        Width="96"
                        FontSize="{StaticResource StandardFontSize}" >
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Reqd_date_heading">Required by</clr:String>


    <Style x:Key="Order_header_Reqd_date_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Required by"
                        IsEnabled="{Binding Path=Reqd_dateIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Reqd_date_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <DatePicker
                        
                        HorizontalAlignment="Left"
                        Name="ctlOrder_header_Reqd_date"
                        SelectedDate="{Binding Path=Reqd_date, Converter={StaticResource decimalDateConverter}, UpdateSourceTrigger=Default,
                                ConverterParameter=FORMAT:YYYYMMDD|NODEFAULTODAY,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                IsEnabled="{Binding Path=Reqd_dateIsEnabled}"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource StandardFontSize}"
                                ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <DatePicker.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Reqd_dateIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Reqd_date}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="DatePicker.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="DatePicker.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="DatePicker.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="DatePicker.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DatePicker.Style>
                    </DatePicker>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Order_header_Reqd_date_RO_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        IsReadOnly="True"
                        Text="{Binding Path=Reqd_date, Converter={StaticResource decimalDateConverter},
                        ConverterParameter=FORMAT:YYYYMMDD|NODEFAULTODAY
                        , StringFormat=\{0:d\}}"
                        Width="96"
                        FontSize="{StaticResource StandardFontSize}" >
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Comments_heading">Comments</clr:String>


    <Style x:Key="Order_header_Comments_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Comments"
                        IsEnabled="{Binding Path=CommentsIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Comments_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        Name="ctlOrder_header_Comments"
                        Text="{Binding Path=Comments, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="40"
                        Width="480"
                        IsEnabled="{Binding Path=CommentsIsEnabled}"
                        IsReadOnly="{Binding Path=CommentsIsReadOnly}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        FontSize="{StaticResource StandardFontSize}"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                                    <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CommentsIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Comments}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Line_count_heading">No of Lines</clr:String>


    <Style x:Key="Order_header_Line_count_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="No of Lines"
                        IsEnabled="{Binding Path=Line_countIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Line_count_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SynergyDecimalBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                         HorizontalContentAlignment="Right"
                        Name="ctlOrder_header_Line_count"
                        Text="{Binding Path=Line_count, Converter={StaticResource decimalConverter}  
                        ,UpdateSourceTrigger=Default
                        ,ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        IsEnabled="{Binding Path=Line_countIsEnabled}"
                        IsReadOnly="{Binding Path=Line_countIsReadOnly}"
                        SynergyDecimalField="False" 
                        MaxLength="5"
                        FontSize="{StaticResource StandardFontSize}"
                        Width="60"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                        <symphonyUI:SynergyDecimalBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Line_countIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Line_count}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SynergyDecimalBox.Style>
                    </symphonyUI:SynergyDecimalBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Tot_value_heading">Total Value (Ex VAT)</clr:String>


    <Style x:Key="Order_header_Tot_value_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Total value (ex VAT)"
                        IsEnabled="{Binding Path=Tot_valueIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Tot_value_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SynergyDecimalBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        Name="ctlOrder_header_Tot_value"
                        Text="{Binding Path=Tot_value, Converter={StaticResource impliedDecimalConverter}  ,StringFormat=#0.00
                                , UpdateSourceTrigger=Default
                                , ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        IsEnabled="{Binding Path=Tot_valueIsEnabled}"
                        IsReadOnly="{Binding Path=Tot_valueIsReadOnly}"
                        SynergyDecimalField="True" 
                        NumberOfDecimals="2"
                        FontSize="{StaticResource StandardFontSize}"                       
                        MaxLength="12"
                        Width="144"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                        <symphonyUI:SynergyDecimalBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Tot_valueIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Tot_value}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SynergyDecimalBox.Style>
                    </symphonyUI:SynergyDecimalBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Tot_vat_heading">Total VAT</clr:String>


    <Style x:Key="Order_header_Tot_vat_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Total VAT"
                        IsEnabled="{Binding Path=Tot_vatIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Tot_vat_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SynergyDecimalBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        Name="ctlOrder_header_Tot_vat"
                        Text="{Binding Path=Tot_vat, Converter={StaticResource impliedDecimalConverter}  ,StringFormat=#0.00
                                , UpdateSourceTrigger=Default
                                , ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        IsEnabled="{Binding Path=Tot_vatIsEnabled}"
                        IsReadOnly="{Binding Path=Tot_vatIsReadOnly}"
                        SynergyDecimalField="True" 
                        NumberOfDecimals="2"
                        FontSize="{StaticResource StandardFontSize}"                       
                        MaxLength="12"
                        Width="144"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                        <symphonyUI:SynergyDecimalBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Tot_vatIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Tot_vat}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SynergyDecimalBox.Style>
                    </symphonyUI:SynergyDecimalBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Order_header_Tot_qty_heading">Total Quantity</clr:String>


    <Style x:Key="Order_header_Tot_qty_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Total Qty"
                        IsEnabled="{Binding Path=Tot_qtyIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Order_header_Tot_qty_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SynergyDecimalBox
                        
                        CaretBrush="{StaticResource CaretBrush}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                         HorizontalContentAlignment="Right"
                        Name="ctlOrder_header_Tot_qty"
                        Text="{Binding Path=Tot_qty, Converter={StaticResource decimalConverter}  
                        ,UpdateSourceTrigger=Default
                        ,ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        IsEnabled="{Binding Path=Tot_qtyIsEnabled}"
                        IsReadOnly="{Binding Path=Tot_qtyIsReadOnly}"
                        SynergyDecimalField="False" 
                        MaxLength="6"
                        FontSize="{StaticResource StandardFontSize}"
                        Width="72"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                                    <i:Interaction.Behaviors>
                                      <symphonyControls:SelectAllTextBoxBehavior></symphonyControls:SelectAllTextBoxBehavior>
                                    </i:Interaction.Behaviors>
                        <symphonyUI:SynergyDecimalBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Tot_qtyIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrder_header_Tot_qty}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputInErrorForegroundBrush}" />
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.2" Color="Gray" />
                                                        <GradientStop Offset="3" Color="Red" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="False">
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource InputForegroundBrush}" />
                                        <Setter Property="TextBox.Background" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SynergyDecimalBox.Style>
                    </symphonyUI:SynergyDecimalBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>

