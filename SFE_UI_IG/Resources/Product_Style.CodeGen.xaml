<!--
 WARNING: This code was generated by CodeGen. Any changes that you
          make to this code will be overwritten if the code is regenerated!

 Template author:   Richard C. Morris, Synergex Professional Services Group

 Template Name: Symphony Framework : SYMPHONY_STYLE_IG_V3_2.tpl
 
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:clr="clr-namespace:System;assembly=mscorlib"
    xmlns:igWPF="http://schemas.infragistics.com/xaml/wpf"
    xmlns:symphonyConverters="clr-namespace:Symphony.Conductor.Converters;assembly=SymphonyConductor"
    xmlns:symphonyTriggers="clr-namespace:Symphony.Conductor.Triggers;assembly=SymphonyConductor"
    xmlns:symphonyUI="clr-namespace:Symphony.Crescendo.Presentation;assembly=SymphonyCrescendo"
    xmlns:symphonyControls="clr-namespace:Symphony.Conductor.Controls;assembly=SymphonyConductor"
	xmlns:uiControls="clr-namespace:SFE_UI.Controls;assembly=SFE_UI"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SFE_UI;component/Resources/Product_Content.CodeGen.xaml"/>
     </ResourceDictionary.MergedDictionaries>


    <clr:String x:Key="Product_Prod_code_heading">Product Code</clr:String>


    <Style x:Key="Product_Prod_code_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Product Code"
                        IsEnabled="{Binding Path=Prod_codeIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Prod_code_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <igWPF:XamMaskedEditor
                        Name="ctlProduct_Prod_code"
                        Value="{Binding Path=Prod_code, UpdateSourceTrigger=LostFocus,
                        ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        Width="72"
                        Mask=">{char:6:a-zA-Z0-9}"
                        IsEnabled="{Binding Path=Prod_codeIsEnabled}"
                        IsReadOnly="{Binding Path=Prod_codeIsReadOnly}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<i:Interaction.Behaviors>
							<uiControls:SelectAllMaskedEditorBehavior></uiControls:SelectAllMaskedEditorBehavior>
						</i:Interaction.Behaviors>
                        <igWPF:XamMaskedEditor.ValueConstraint>
                            <igWPF:ValueConstraint MaxLength="6"></igWPF:ValueConstraint>
                        </igWPF:XamMaskedEditor.ValueConstraint>
                        <igWPF:XamMaskedEditor.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Prod_codeIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlProduct_Prod_code}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.2" Color="WhiteSmoke" />
                                                    <GradientStop Offset="3" Color="Red" />
                                                </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </igWPF:XamMaskedEditor.Style>
                    </igWPF:XamMaskedEditor>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Prod_description_heading">Description</clr:String>


    <Style x:Key="Product_Prod_description_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Description"
                        IsEnabled="{Binding Path=Prod_descriptionIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Prod_description_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <igWPF:XamMaskedEditor
                        Name="ctlProduct_Prod_description"
                        Value="{Binding Path=Prod_description, UpdateSourceTrigger=LostFocus,
                        ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        Width="480"
                        IsEnabled="{Binding Path=Prod_descriptionIsEnabled}"
                        IsReadOnly="{Binding Path=Prod_descriptionIsReadOnly}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<i:Interaction.Behaviors>
							<uiControls:SelectAllMaskedEditorBehavior></uiControls:SelectAllMaskedEditorBehavior>
						</i:Interaction.Behaviors>
                        <igWPF:XamMaskedEditor.ValueConstraint>
                            <igWPF:ValueConstraint MaxLength="40"></igWPF:ValueConstraint>
                        </igWPF:XamMaskedEditor.ValueConstraint>
                        <igWPF:XamMaskedEditor.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Prod_descriptionIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlProduct_Prod_description}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.2" Color="WhiteSmoke" />
                                                    <GradientStop Offset="3" Color="Red" />
                                                </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </igWPF:XamMaskedEditor.Style>
                    </igWPF:XamMaskedEditor>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Supp_code_heading">Supplier</clr:String>


    <Style x:Key="Product_Supp_code_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Supplier"
                        IsEnabled="{Binding Path=Supp_codeIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Supp_code_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <StackPanel Orientation="Horizontal">
                        <igWPF:XamMaskedEditor
                            Name="ctlProduct_Supp_code"
                            Value="{Binding Path=Supp_code, UpdateSourceTrigger=LostFocus,
                            ValidatesOnDataErrors=True}"
                            Validation.ErrorTemplate="{StaticResource validationTemplate}"
                            Width="100"
                            Mask=">{char:6:a-zA-Z0-9}"
                            IsEnabled="{Binding Path=Supp_codeIsEnabled}"
                            IsReadOnly="{Binding Path=Supp_codeIsReadOnly}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                            <i:Interaction.Behaviors>
                                <uiControls:SelectAllMaskedEditorBehavior></uiControls:SelectAllMaskedEditorBehavior>
                            </i:Interaction.Behaviors>
                            <igWPF:XamMaskedEditor.ValueConstraint>
                                <igWPF:ValueConstraint MaxLength="6"></igWPF:ValueConstraint>
                            </igWPF:XamMaskedEditor.ValueConstraint>
                            <igWPF:XamMaskedEditor.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Supp_codeIsFocused}" Value="true">
                                            <Setter Property="FocusManager.FocusedElement"
                                                    Value="{Binding ElementName=ctlProduct_Supp_code}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                            <Setter Property="TextBox.Background" >
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0.2" Color="WhiteSmoke" />
                                                            <GradientStop Offset="3" Color="Red" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </igWPF:XamMaskedEditor.Style>
                        </igWPF:XamMaskedEditor>
                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.NavigateState}"
                                CommandParameter="SupplierCodeDrillState"
                                IsEnabled="{Binding Path=Supp_codeIsEnabled}"
                                Visibility="{Binding Path=Supp_codeIsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Content>
                                <Image Source="pack://application:,,,/SymphonyCrescendo;component/Images/search_image.png" Height="10" Width="10">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <Trigger Property="Image.IsMouseOver" Value="True">
                                                    <Setter Property="Image.RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button.Content>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="Transparent">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Cost_price_heading">Cost Price</clr:String>


    <Style x:Key="Product_Cost_price_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Cost Price"
                        IsEnabled="{Binding Path=Cost_priceIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Cost_price_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
					<igWPF:XamNumericEditor
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Name="ctlProduct_Cost_price"
						Value="{Binding Path=Cost_price
						, UpdateSourceTrigger=Default
						, ValidatesOnDataErrors=True}"
						ValueType="{x:Type clr:Decimal}"
						Mask="{}{double:8.2}"
						Validation.ErrorTemplate="{StaticResource validationTemplate}"
						IsEnabled="{Binding Path=Cost_priceIsEnabled}"
						IsReadOnly="{Binding Path=Cost_priceIsReadOnly}"
						Width="120"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<i:Interaction.Behaviors>
							<uiControls:SelectAllNumericEditorBehavior></uiControls:SelectAllNumericEditorBehavior>
						</i:Interaction.Behaviors>
						<igWPF:XamNumericEditor.ValueConstraint>
							<igWPF:ValueConstraint MaxLength="10"></igWPF:ValueConstraint>
						</igWPF:XamNumericEditor.ValueConstraint>
						<igWPF:XamNumericEditor.Style>
							<Style>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=Cost_priceIsFocused}" Value="true">
										<Setter Property="FocusManager.FocusedElement"
												Value="{Binding ElementName=ctlProduct_Cost_price}"></Setter>
									</DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</igWPF:XamNumericEditor.Style>
					</igWPF:XamNumericEditor>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Sell_price_heading">Selling Price</clr:String>


    <Style x:Key="Product_Sell_price_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Selling Price"
                        IsEnabled="{Binding Path=Sell_priceIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Sell_price_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
					<igWPF:XamNumericEditor
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Name="ctlProduct_Sell_price"
						Value="{Binding Path=Sell_price
						, UpdateSourceTrigger=Default
						, ValidatesOnDataErrors=True}"
						ValueType="{x:Type clr:Decimal}"
						Mask="{}{double:8.2}"
						Validation.ErrorTemplate="{StaticResource validationTemplate}"
						IsEnabled="{Binding Path=Sell_priceIsEnabled}"
						IsReadOnly="{Binding Path=Sell_priceIsReadOnly}"
						Width="120"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<i:Interaction.Behaviors>
							<uiControls:SelectAllNumericEditorBehavior></uiControls:SelectAllNumericEditorBehavior>
						</i:Interaction.Behaviors>
						<igWPF:XamNumericEditor.ValueConstraint>
							<igWPF:ValueConstraint MaxLength="10"></igWPF:ValueConstraint>
						</igWPF:XamNumericEditor.ValueConstraint>
						<igWPF:XamNumericEditor.Style>
							<Style>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=Sell_priceIsFocused}" Value="true">
										<Setter Property="FocusManager.FocusedElement"
												Value="{Binding ElementName=ctlProduct_Sell_price}"></Setter>
									</DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</igWPF:XamNumericEditor.Style>
					</igWPF:XamNumericEditor>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Pack_size_heading">Pack Size</clr:String>


    <Style x:Key="Product_Pack_size_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Pack Size"
                        IsEnabled="{Binding Path=Pack_sizeIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Pack_size_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <igWPF:XamMaskedEditor
                        Name="ctlProduct_Pack_size"
                        Value="{Binding Path=Pack_size, UpdateSourceTrigger=LostFocus,
                        ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        Width="120"
                        IsEnabled="{Binding Path=Pack_sizeIsEnabled}"
                        IsReadOnly="{Binding Path=Pack_sizeIsReadOnly}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<i:Interaction.Behaviors>
							<uiControls:SelectAllMaskedEditorBehavior></uiControls:SelectAllMaskedEditorBehavior>
						</i:Interaction.Behaviors>
                        <igWPF:XamMaskedEditor.ValueConstraint>
                            <igWPF:ValueConstraint MaxLength="10"></igWPF:ValueConstraint>
                        </igWPF:XamMaskedEditor.ValueConstraint>
                        <igWPF:XamMaskedEditor.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Pack_sizeIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlProduct_Pack_size}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="TextBox.Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.2" Color="WhiteSmoke" />
                                                    <GradientStop Offset="3" Color="Red" />
                                                </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </igWPF:XamMaskedEditor.Style>
                    </igWPF:XamMaskedEditor>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Vat_code_heading">VAT Code</clr:String>


    <Style x:Key="Product_Vat_code_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="VAT Code"
                        IsEnabled="{Binding Path=Vat_codeIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Vat_code_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ComboBox Grid.Row="0"
                            Visibility="{Binding Path=Vat_codeIsReadOnly, Converter={StaticResource reverseBooleanToVisibilityConverter}}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Name="ctlProduct_Vat_code"
                            ItemsSource="{Binding Source={StaticResource VAT_CODEitems}}"
                            DisplayMemberPath="Description"
                            SelectedValue="{Binding Path=Vat_code,
                            ValidatesOnDataErrors=True}"
                            Validation.ErrorTemplate="{StaticResource validationTemplate}"
                            SelectedValuePath="IndexValue"
                            IsEnabled="{Binding Path=Vat_codeIsEnabled}"
                            Width="120"
                            Margin="0,1,0,1"
                            ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                            <ComboBox.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Vat_codeIsFocused}" Value="true">
                                            <Setter Property="FocusManager.FocusedElement"
                                                    Value="{Binding ElementName=ctlProduct_Vat_code}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                            <Setter Property="ComboBox.Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0.2" Color="WhiteSmoke" />
                                                            <GradientStop Offset="3" Color="Red" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                        <TextBox Grid.Row="0"
                                 Width="120"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="0,1,0,1"
                                 Text="{Binding ElementName=ctlProduct_Vat_code, Path=Text}"
                                 Visibility="{Binding Path=Vat_codeIsReadOnly, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 IsReadOnly="True">
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Prod_group_heading">Product Group</clr:String>


    <Style x:Key="Product_Prod_group_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="Product Group"
                        IsEnabled="{Binding Path=Prod_groupIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Prod_group_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <StackPanel Orientation="Horizontal">
                        <igWPF:XamMaskedEditor
                            Name="ctlProduct_Prod_group"
                            Value="{Binding Path=Prod_group, UpdateSourceTrigger=LostFocus,
                            ValidatesOnDataErrors=True}"
                            Validation.ErrorTemplate="{StaticResource validationTemplate}"
                            Width="100"
                            Mask=">{char:3:a-zA-Z0-9}"
                            IsEnabled="{Binding Path=Prod_groupIsEnabled}"
                            IsReadOnly="{Binding Path=Prod_groupIsReadOnly}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                            <i:Interaction.Behaviors>
                                <uiControls:SelectAllMaskedEditorBehavior></uiControls:SelectAllMaskedEditorBehavior>
                            </i:Interaction.Behaviors>
                            <igWPF:XamMaskedEditor.ValueConstraint>
                                <igWPF:ValueConstraint MaxLength="3"></igWPF:ValueConstraint>
                            </igWPF:XamMaskedEditor.ValueConstraint>
                            <igWPF:XamMaskedEditor.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Prod_groupIsFocused}" Value="true">
                                            <Setter Property="FocusManager.FocusedElement"
                                                    Value="{Binding ElementName=ctlProduct_Prod_group}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
                                            <Setter Property="TextBox.Background" >
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0.2" Color="WhiteSmoke" />
                                                            <GradientStop Offset="3" Color="Red" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </igWPF:XamMaskedEditor.Style>
                        </igWPF:XamMaskedEditor>
                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.NavigateState}"
                                CommandParameter="ProdGroupDrillState"
                                IsEnabled="{Binding Path=Prod_groupIsEnabled}"
                                Visibility="{Binding Path=Prod_groupIsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Content>
                                <Image Source="pack://application:,,,/SymphonyCrescendo;component/Images/search_image.png" Height="10" Width="10">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <Trigger Property="Image.IsMouseOver" Value="True">
                                                    <Setter Property="Image.RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" CenterX="10" CenterY="10"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button.Content>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="Transparent">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <clr:String x:Key="Product_Promotion_heading">On Offer ?</clr:String>


    <Style x:Key="Product_Promotion_prompt" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label
                        Content="On Offer ?"
                        IsEnabled="{Binding Path=PromotionIsEnabled}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Product_Promotion_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <igWPF:XamCheckEditor
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Name="ctlProduct_Promotion"
                        Value="{Binding Path=Promotion}"
                        ValueType="{x:Type clr:Boolean}"
                        IsEnabled="{Binding Path=PromotionIsEnabled}"
                        IsReadOnly="{Binding Path=PromotionIsReadOnly}"
                        ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <igWPF:XamCheckEditor.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PromotionIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlProduct_Promotion}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </igWPF:XamCheckEditor.Style>
                    </igWPF:XamCheckEditor>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>

